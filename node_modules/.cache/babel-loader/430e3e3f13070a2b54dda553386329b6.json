{"ast":null,"code":"var _jsxFileName = \"/home/nawan44/Documents/github/portofolio/CRUD/src/input/input.jsx\";\nimport React from 'react';\nimport { Button, Form, Label, Input } from 'reactstrap'; //use path module\n\nconst path = require('path'); //use express module\n\n\nconst express = require('express'); //use hbs view engine\n\n\nconst hbs = require('hbs'); //use bodyParser middleware\n\n\nconst bodyParser = require('body-parser'); //use mysql database\n\n\nconst mysql = require('mysql');\n\nconst app = express(); //konfigurasi koneksi\n\nconst conn = mysql.createConnection({\n  host: 'localhost',\n  user: 'root',\n  password: '',\n  database: 'activity_db'\n}); //connect ke database\n\nconn.connect(err => {\n  if (err) throw err;\n  console.log('Mysql Connected...');\n}); //set views file\n\napp.set('views', path.join(__dirname, 'views')); //set view engine\n\napp.set('view engine', 'hbs');\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n  extended: false\n})); //set folder public sebagai static folder untuk static file\n\napp.use('/assets', express.static(__dirname + '/public')); //route untuk homepage\n\napp.get('/', (req, res) => {\n  let sql = \"SELECT * FROM todolist_tbl\";\n  let query = conn.query(sql, (err, results) => {\n    if (err) throw err;\n    res.render('App', {\n      results: results\n    });\n  });\n}); //route untuk insert data\n\napp.post('/save', (req, res) => {\n  let data = {\n    name: req.body.name,\n    activity: req.body.activity,\n    date: req.body.date\n  };\n  let sql = \"INSERT INTO todolist_tbl SET ?\";\n  let query = conn.query(sql, data, (err, results) => {\n    if (err) throw err;\n    res.redirect('/');\n  });\n}); //route untuk update data\n\napp.post('/update', (req, res) => {\n  let sql = \"UPDATE todolist_tbl SET name='\" + req.body.name + \"', activity='\" + req.body.activity + \"', date='\" + req.body.date + \"' WHERE id=\" + req.body.id;\n  let query = conn.query(sql, (err, results) => {\n    if (err) throw err;\n    res.redirect('/');\n  });\n}); //route untuk delete data\n\napp.post('/delete', (req, res) => {\n  let sql = \"DELETE FROM todolist_tbl WHERE id=\" + req.body.id + \"\";\n  let query = conn.query(sql, (err, results) => {\n    if (err) throw err;\n    res.redirect('/');\n  });\n}); //server listening\n\napp.listen(3000, () => {\n  console.log('Server is running at port 3000');\n});\n\nclass FormInput extends React.Component {\n  render() {\n    const {\n      handlerCancel,\n      functionChange,\n      functionSave,\n      categoryModel\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, \"Create Data\"), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 12\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      class: \"form-control\",\n      placeholder: \"Name\",\n      value: categoryModel.name,\n      onChange: functionChange('name'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 19\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 141\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, \"Activity\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      class: \"form-control\",\n      placeholder: \"Activity\",\n      value: categoryModel.activity,\n      onChange: functionChange('activity'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 152\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, \"Date\"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      type: \"date\",\n      class: \"form-control\",\n      value: categoryModel.date,\n      onChange: functionChange('date'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 120\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      class: \"btn btn-info pull-right\",\n      onClick: functionSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, \"Save Change\"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 132\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 137\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"danger\",\n      class: \"btn btn-default\",\n      onClick: handlerCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, \"Cancel\")));\n  }\n\n}\n\nexport default FormInput;","map":{"version":3,"sources":["/home/nawan44/Documents/github/portofolio/CRUD/src/input/input.jsx"],"names":["React","Button","Form","Label","Input","path","require","express","hbs","bodyParser","mysql","app","conn","createConnection","host","user","password","database","connect","err","console","log","set","join","__dirname","use","json","urlencoded","extended","static","get","req","res","sql","query","results","render","post","data","name","body","activity","date","redirect","id","listen","FormInput","Component","handlerCancel","functionChange","functionSave","categoryModel","props"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Form, Label, Input } from 'reactstrap';\n\n\n\n//use path module\nconst path = require('path');\n//use express module\nconst express = require('express');\n//use hbs view engine\nconst hbs = require('hbs');\n//use bodyParser middleware\nconst bodyParser = require('body-parser');\n//use mysql database\nconst mysql = require('mysql');\nconst app = express();\n \n//konfigurasi koneksi\nconst conn = mysql.createConnection({\n  host: 'localhost',\n  user: 'root',\n  password: '',\n  database: 'activity_db'\n});\n \n//connect ke database\nconn.connect((err) =>{\n  if(err) throw err;\n  console.log('Mysql Connected...');\n});\n\n//set views file\napp.set('views',path.join(__dirname,'views'));\n//set view engine\napp.set('view engine', 'hbs');\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\n//set folder public sebagai static folder untuk static file\napp.use('/assets',express.static(__dirname + '/public'));\n\n//route untuk homepage\napp.get('/',(req, res) => {\n    let sql = \"SELECT * FROM todolist_tbl\";\n    let query = conn.query(sql, (err, results) => {\n      if(err) throw err;\n      res.render('App',{\n        results: results\n      });\n    });\n  });\n  //route untuk insert data\napp.post('/save',(req, res) => {\n    let data = {name: req.body.name, activity: req.body.activity,  date: req.body.date};\n    let sql = \"INSERT INTO todolist_tbl SET ?\";\n    let query = conn.query(sql, data,(err, results) => {\n      if(err) throw err;\n      res.redirect('/');\n    });\n  });\n   \n  //route untuk update data\n  app.post('/update',(req, res) => {\n    let sql = \"UPDATE todolist_tbl SET name='\"+req.body.name+\"', activity='\"+req.body.activity+\"', date='\"+req.body.date+\"' WHERE id=\"+req.body.id;\n    let query = conn.query(sql, (err, results) => {\n      if(err) throw err;\n      res.redirect('/');\n    });\n  });\n   \n  //route untuk delete data\n  app.post('/delete',(req, res) => {\n    let sql = \"DELETE FROM todolist_tbl WHERE id=\"+req.body.id+\"\";\n    let query = conn.query(sql, (err, results) => {\n      if(err) throw err;\n        res.redirect('/');\n    });\n  });\n   \n  //server listening\n  app.listen(3000, () => {\n    console.log('Server is running at port 3000');\n  });\n\n\n\nclass FormInput extends React.Component {\n\n    render() {\n        const { handlerCancel, functionChange ,  functionSave, categoryModel} = this.props;\n        return (\n            <div>\n                <p>Create Data</p>\n                <Form>\n                  \n           <Label>Name</Label>\n                  <Input type=\"text\" class=\"form-control\" placeholder=\"Name\" value={categoryModel.name} onChange={functionChange('name')}/> <br />\n                <Label>Activity</Label>\n                <Input type=\"text\" class=\"form-control\" placeholder=\"Activity\"  value={categoryModel.activity} onChange={functionChange('activity')}/> <br />\n                <Label>Date</Label> <br/>\n                <Input type=\"date\" class=\"form-control\" value={categoryModel.date} onChange={functionChange('date')}/> <br />\n                <br/>\n                <Button type=\"submit\" color=\"primary\" class=\"btn btn-info pull-right\"  onClick={functionSave}>Save Change</Button> <br/><br/>\n                <Button type=\"submit\" color=\"danger\" class=\"btn btn-default\" onClick={handlerCancel}>Cancel</Button>\n                </Form>\n              \n</div>\n        )\n    }\n}\n\nexport default FormInput"]},"metadata":{},"sourceType":"module"}