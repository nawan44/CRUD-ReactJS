{"ast":null,"code":"'use strict';\n/**\n * Sequelize provides a host of custom error classes, to allow you to do easier debugging. All of these errors are exposed on the sequelize object and the sequelize constructor.\n * All sequelize errors inherit from the base JS error object.\n *\n * This means that errors can be accessed using `Sequelize.ValidationError`\n * The Base Error all Sequelize Errors inherit from.\n */\n\nclass BaseError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = 'SequelizeBaseError';\n  }\n\n}\n\nmodule.exports = BaseError;","map":{"version":3,"sources":["/home/nawan44/Documents/github/portofolio/CRUD/node_modules/sequelize/lib/errors/base-error.js"],"names":["BaseError","Error","constructor","message","name","module","exports"],"mappings":"AAAA;AAEA;;;;;;;;AAOA,MAAMA,SAAN,SAAwBC,KAAxB,CAA8B;AAC5BC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACnB,UAAMA,OAAN;AACA,SAAKC,IAAL,GAAY,oBAAZ;AACD;;AAJ2B;;AAO9BC,MAAM,CAACC,OAAP,GAAiBN,SAAjB","sourcesContent":["'use strict';\n\n/**\n * Sequelize provides a host of custom error classes, to allow you to do easier debugging. All of these errors are exposed on the sequelize object and the sequelize constructor.\n * All sequelize errors inherit from the base JS error object.\n *\n * This means that errors can be accessed using `Sequelize.ValidationError`\n * The Base Error all Sequelize Errors inherit from.\n */\nclass BaseError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = 'SequelizeBaseError';\n  }\n}\n\nmodule.exports = BaseError;\n"]},"metadata":{},"sourceType":"script"}