{"ast":null,"code":"// const path = require('path');\nconst express = require('express'); // const hbs = require('hbs');\n// const bodyParser = require('body-parser');\n\n\nconst mysql = require('mysql');\n\nconst app = express(); // const database = require('./database'); \n//konfigurasi koneksi\n\nconst conn = mysql.createConnection({\n  host: 'localhost',\n  user: 'root',\n  password: 'password',\n  database: 'activity_db'\n}); //connect ke database\n\nconn.connect(function (err) {\n  if (err) throw err;\n  console.log('Mysql Connected...');\n}); // //set views file\n// app.set('',path.join(__dirname,''));\n// //set view engine\n// app.set('', 'hbs');\n// app.use(bodyParser.json());\n// app.use(bodyParser.urlencoded({ extended: false }));\n// //set folder public sebagai static folder untuk static file\n// app.use('/',express.static(__dirname + '/'));\n// //route untuk homepage\n// app.get('/',(req, res) => {\n//   let sql = \"SELECT * FROM todolist_tbl\";\n//   let query = conn.query(sql, (err, results) => {\n//     if(err) throw err;\n//     res.render('App',{\n//       results: results\n//     });\n//   });\n// });\n// //route untuk insert data\n// app.post('/save',(req, res) => {\n//     let data = {name: req.body.name, activity: req.body.activity, date: req.body.date};\n//     let sql = \"INSERT INTO todolist_tbl SET ?\";\n//     let query = conn.query(sql, data,(err, results) => {\n//       if(err) throw err;\n//       res.redirect('/');\n//     });\n//   });\n// //route untuk update data\n// app.post('/update',(req, res) => {\n//     let sql = \"UPDATE todolist_tbl SET name='\"+req.body.name+\"', activity='\"+req.body.activity+\"',date='\"+req.body.date+\"' WHERE id=\"+req.body.id;\n//     let query = conn.query(sql, (err, results) => {\n//       if(err) throw err;\n//       res.redirect('/');\n//     });\n//   });\n//   //route untuk delete data\n//   app.post('/delete',(req, res) => {\n//     let sql = \"DELETE FROM todolist_tbl WHERE id=\"+req.body.id+\"\";\n//     let query = conn.query(sql, (err, results) => {\n//       if(err) throw err;\n//         res.redirect('/');\n//     });\n//   });\n//server listening\n// app.listen(8000, () => {\n//   console.log('Server is running at port 8000');\n// });","map":{"version":3,"sources":["/home/nawan44/Documents/github/portofolio/CRUD/src/index.js"],"names":["express","require","mysql","app","conn","createConnection","host","user","password","database","connect","err","console","log"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB,C,CACA;AACA;;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAArB;;AACA,MAAME,GAAG,GAAGH,OAAO,EAAnB,C,CACA;AAEA;;AACA,MAAMI,IAAI,GAAGF,KAAK,CAACG,gBAAN,CAAuB;AAClCC,EAAAA,IAAI,EAAE,WAD4B;AAElCC,EAAAA,IAAI,EAAE,MAF4B;AAGlCC,EAAAA,QAAQ,EAAE,UAHwB;AAIlCC,EAAAA,QAAQ,EAAE;AAJwB,CAAvB,CAAb,C,CAOA;;AACAL,IAAI,CAACM,OAAL,CAAa,UAASC,GAAT,EAAc;AACzB,MAAGA,GAAH,EAAQ,MAAMA,GAAN;AACRC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACD,CAHD,E,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE;AACA;AACA;AACA","sourcesContent":["// const path = require('path');\nconst express = require('express');\n// const hbs = require('hbs');\n// const bodyParser = require('body-parser');\nconst mysql = require('mysql');\nconst app = express();\n// const database = require('./database'); \n\n//konfigurasi koneksi\nconst conn = mysql.createConnection({\n  host: 'localhost',\n  user: 'root',\n  password: 'password',\n  database: 'activity_db'\n});\n \n//connect ke database\nconn.connect(function(err) {\n  if(err) throw err;\n  console.log('Mysql Connected...');\n});\n \n// //set views file\n// app.set('',path.join(__dirname,''));\n// //set view engine\n// app.set('', 'hbs');\n// app.use(bodyParser.json());\n// app.use(bodyParser.urlencoded({ extended: false }));\n// //set folder public sebagai static folder untuk static file\n// app.use('/',express.static(__dirname + '/'));\n \n\n\n// //route untuk homepage\n// app.get('/',(req, res) => {\n//   let sql = \"SELECT * FROM todolist_tbl\";\n//   let query = conn.query(sql, (err, results) => {\n//     if(err) throw err;\n//     res.render('App',{\n//       results: results\n//     });\n//   });\n// });\n\n// //route untuk insert data\n// app.post('/save',(req, res) => {\n//     let data = {name: req.body.name, activity: req.body.activity, date: req.body.date};\n//     let sql = \"INSERT INTO todolist_tbl SET ?\";\n//     let query = conn.query(sql, data,(err, results) => {\n//       if(err) throw err;\n//       res.redirect('/');\n//     });\n//   });\n\n// //route untuk update data\n// app.post('/update',(req, res) => {\n//     let sql = \"UPDATE todolist_tbl SET name='\"+req.body.name+\"', activity='\"+req.body.activity+\"',date='\"+req.body.date+\"' WHERE id=\"+req.body.id;\n//     let query = conn.query(sql, (err, results) => {\n//       if(err) throw err;\n//       res.redirect('/');\n//     });\n//   });\n   \n//   //route untuk delete data\n//   app.post('/delete',(req, res) => {\n//     let sql = \"DELETE FROM todolist_tbl WHERE id=\"+req.body.id+\"\";\n//     let query = conn.query(sql, (err, results) => {\n//       if(err) throw err;\n//         res.redirect('/');\n//     });\n//   });\n   \n  //server listening\n  // app.listen(8000, () => {\n  //   console.log('Server is running at port 8000');\n  // });\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}