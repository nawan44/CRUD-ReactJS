{"ast":null,"code":"import axios from 'axios';\nimport { config } from '../component/config/config';\nconst Service = {\n  getAll: () => {\n    const result = axios.get(config.apiUrl).then(respons => {\n      return {\n        success: respons.data.success,\n        result: respons.data.result\n      };\n    }).catch(error => {\n      return {\n        success: false,\n        result: error\n      };\n    });\n    return result;\n  },\n  getById: id => {\n    const result = axios.get(config.apiUrl + '/:id' + id).then(respons => {\n      return {\n        success: respons.data.success,\n        result: respons.data.result\n      };\n    }).catch(error => {\n      return {\n        success: false,\n        result: error\n      };\n    });\n    return result;\n  },\n  Create: item => {\n    const result = axios.post(config.apiUrl + item).then(respons => {\n      return {\n        success: respons.data.success,\n        result: respons.data.result\n      };\n    }).catch(error => {\n      return {\n        success: false,\n        result: error\n      };\n    });\n    return result;\n  },\n  Update: item => {\n    const result = axios.put(config.apiUrl + item.id, item).then(respons => {\n      return {\n        success: respons.data.success,\n        result: respons.data.result\n      };\n    }).catch(error => {\n      return {\n        success: false,\n        result: error\n      };\n    });\n    return result;\n  },\n  Delete: item => {\n    const result = axios.put(config.apiUrl + '/DeleteDataCategory/' + item.id, item).then(respons => {\n      return {\n        success: respons.data.success,\n        result: respons.data.result\n      };\n    }).catch(error => {\n      return {\n        success: false,\n        result: error\n      };\n    });\n    return result;\n  }\n};\nexport default Service;","map":{"version":3,"sources":["/home/nawan44/Documents/github/portofolio/CRUD/CRUD-frontend/src/component/service.jsx"],"names":["axios","config","Service","getAll","result","get","apiUrl","then","respons","success","data","catch","error","getById","id","Create","item","post","Update","put","Delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,4BAAvB;AAEA,MAAMC,OAAO,GAAG;AACZC,EAAAA,MAAM,EAAE,MAAM;AACV,UAAMC,MAAM,GAAGJ,KAAK,CAACK,GAAN,CAAUJ,MAAM,CAACK,MAAjB,EACVC,IADU,CACLC,OAAO,IAAI;AACb,aAAO;AACHC,QAAAA,OAAO,EAAED,OAAO,CAACE,IAAR,CAAaD,OADnB;AAEHL,QAAAA,MAAM,EAAEI,OAAO,CAACE,IAAR,CAAaN;AAFlB,OAAP;AAIH,KANU,EAOVO,KAPU,CAOJC,KAAK,IAAI;AACZ,aAAO;AACHH,QAAAA,OAAO,EAAE,KADN;AAEHL,QAAAA,MAAM,EAAEQ;AAFL,OAAP;AAIH,KAZU,CAAf;AAaA,WAAOR,MAAP;AACH,GAhBW;AAkBZS,EAAAA,OAAO,EAAGC,EAAD,IAAQ;AACb,UAAMV,MAAM,GAAGJ,KAAK,CAACK,GAAN,CAAUJ,MAAM,CAACK,MAAP,GAAgB,MAAhB,GAAyBQ,EAAnC,EACVP,IADU,CACLC,OAAO,IAAI;AACb,aAAO;AACHC,QAAAA,OAAO,EAAED,OAAO,CAACE,IAAR,CAAaD,OADnB;AAEHL,QAAAA,MAAM,EAAEI,OAAO,CAACE,IAAR,CAAaN;AAFlB,OAAP;AAIH,KANU,EAOVO,KAPU,CAOJC,KAAK,IAAI;AACZ,aAAO;AACHH,QAAAA,OAAO,EAAE,KADN;AAEHL,QAAAA,MAAM,EAAEQ;AAFL,OAAP;AAIH,KAZU,CAAf;AAaA,WAAOR,MAAP;AACH,GAjCW;AAmCZW,EAAAA,MAAM,EAAGC,IAAD,IAAU;AACd,UAAMZ,MAAM,GAAGJ,KAAK,CAACiB,IAAN,CAAWhB,MAAM,CAACK,MAAP,GAAiBU,IAA5B,EACVT,IADU,CACLC,OAAO,IAAI;AACb,aAAO;AACHC,QAAAA,OAAO,EAAED,OAAO,CAACE,IAAR,CAAaD,OADnB;AAEHL,QAAAA,MAAM,EAAEI,OAAO,CAACE,IAAR,CAAaN;AAFlB,OAAP;AAIH,KANU,EAOVO,KAPU,CAOJC,KAAK,IAAI;AACZ,aAAO;AACHH,QAAAA,OAAO,EAAE,KADN;AAEHL,QAAAA,MAAM,EAAEQ;AAFL,OAAP;AAIH,KAZU,CAAf;AAaA,WAAOR,MAAP;AACH,GAlDW;AAmDZc,EAAAA,MAAM,EAAGF,IAAD,IAAU;AACd,UAAMZ,MAAM,GAAGJ,KAAK,CAACmB,GAAN,CAAUlB,MAAM,CAACK,MAAP,GAAiBU,IAAI,CAACF,EAAhC,EAAoCE,IAApC,EACVT,IADU,CACLC,OAAO,IAAI;AACb,aAAO;AACHC,QAAAA,OAAO,EAAED,OAAO,CAACE,IAAR,CAAaD,OADnB;AAEHL,QAAAA,MAAM,EAAEI,OAAO,CAACE,IAAR,CAAaN;AAFlB,OAAP;AAIH,KANU,EAOVO,KAPU,CAOJC,KAAK,IAAI;AACZ,aAAO;AACHH,QAAAA,OAAO,EAAE,KADN;AAEHL,QAAAA,MAAM,EAAEQ;AAFL,OAAP;AAIH,KAZU,CAAf;AAaA,WAAOR,MAAP;AACH,GAlEW;AAoEZgB,EAAAA,MAAM,EAAGJ,IAAD,IAAU;AACd,UAAMZ,MAAM,GAAGJ,KAAK,CAACmB,GAAN,CAAUlB,MAAM,CAACK,MAAP,GAAgB,sBAAhB,GAAyCU,IAAI,CAACF,EAAxD,EAA4DE,IAA5D,EACVT,IADU,CACLC,OAAO,IAAI;AACb,aAAO;AACHC,QAAAA,OAAO,EAAED,OAAO,CAACE,IAAR,CAAaD,OADnB;AAEHL,QAAAA,MAAM,EAAEI,OAAO,CAACE,IAAR,CAAaN;AAFlB,OAAP;AAIH,KANU,EAOVO,KAPU,CAOJC,KAAK,IAAI;AACZ,aAAO;AACHH,QAAAA,OAAO,EAAE,KADN;AAEHL,QAAAA,MAAM,EAAEQ;AAFL,OAAP;AAIH,KAZU,CAAf;AAaA,WAAOR,MAAP;AACH;AAnFW,CAAhB;AAwFA,eAAeF,OAAf","sourcesContent":["import axios from 'axios';\nimport { config } from '../component/config/config';\n\nconst Service = {\n    getAll: () => {\n        const result = axios.get(config.apiUrl)\n            .then(respons => {\n                return {\n                    success: respons.data.success,\n                    result: respons.data.result\n                }\n            })\n            .catch(error => {\n                return {\n                    success: false,\n                    result: error\n                }\n            });\n        return result;\n    },\n\n    getById: (id) => {\n        const result = axios.get(config.apiUrl + '/:id' + id)\n            .then(respons => {\n                return {\n                    success: respons.data.success,\n                    result: respons.data.result\n                }\n            })\n            .catch(error => {\n                return {\n                    success: false,\n                    result: error\n                }\n            });\n        return result;\n    },\n\n    Create: (item) => {\n        const result = axios.post(config.apiUrl +  item)\n            .then(respons => {\n                return {\n                    success: respons.data.success,\n                    result: respons.data.result\n                }\n            })\n            .catch(error => {\n                return {\n                    success: false,\n                    result: error\n                }\n            });\n        return result;\n    },\n    Update: (item) => {\n        const result = axios.put(config.apiUrl +  item.id, item)\n            .then(respons => {\n                return {\n                    success: respons.data.success,\n                    result: respons.data.result\n                }\n            })\n            .catch(error => {\n                return {\n                    success: false,\n                    result: error\n                }\n            });\n        return result;\n    },\n\n    Delete: (item) => {\n        const result = axios.put(config.apiUrl + '/DeleteDataCategory/' + item.id, item)\n            .then(respons => {\n                return {\n                    success: respons.data.success,\n                    result: respons.data.result\n                }\n            })\n            .catch(error => {\n                return {\n                    success: false,\n                    result: error\n                }\n            });\n        return result;\n    }\n\n\n}\n\nexport default Service;"]},"metadata":{},"sourceType":"module"}