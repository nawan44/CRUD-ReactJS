{"ast":null,"code":"var _jsxFileName = \"/home/nawan44/Documents/github/portofolio/CRUD/CRUD-frontend/src/App.jsx\";\n// import React from 'react';\n// import './css/App.css'\n// import FormInput from './component/input/input';\n// import { Button,  Table } from 'reactstrap';\n// class App extends React.Component {\n//     constructor() {\n//         super();\n//         this.state = {\n//             ListData:\n//                 [\n//                 ],\n//             isShow: false,\n//             categoryModel: this.itemModel,\n//             mode: ''\n//         }\n//     }\n//     handlerCreate = () => {\n//         const idMax = this.state.ListData.length;\n//         this.setState({\n//             isShow: true,\n//             mode: 'create',\n//             categoryModel: {\n//                 ...this.state.categoryModel,\n//                 ['id']: idMax + 1\n//             }\n//         })\n//     }\n//     hendleEdit = (id) => {\n//         const selected = this.state.ListData.find(a => a.id === id);\n//         this.setState({\n//             isShow: true,\n//             mode: 'edit',\n//             categoryModel: selected\n//         })\n//     }\n//     handlerCancel = () => {\n//         this.setState({\n//             isShow: false\n//         })\n//     }\n//     hendleDelete = (data) => {\n//         const { ListData } = this.state;\n//         const IndexData = ListData.findIndex(dt => dt.id === data.id);\n//         if (window.confirm(`Apakah anda yakin untuk menghapus data ${data.activity}`)) {\n//             ListData.splice(IndexData, 1);\n//         }\n//         this.setState({\n//             ListData: ListData\n//         })\n//     }\n//     functionChange = activity => ({ target: { value } }) => {\n//         this.setState({\n//             categoryModel: {\n//                 ...this.state.categoryModel,\n//                 [activity]: value\n//             }\n//         })\n//     }\n//     functionSave = () => {\n//         const list = this.state.ListData;\n//         if (this.state.mode === 'create') {\n//             list.push(this.state.categoryModel);\n//         }\n//         else {\n//             const IndexData = list.findIndex(dt => dt.id === this.state.categoryModel.id);\n//             this.state.ListData[IndexData] = {\n//                 id: this.state.categoryModel.id,\n//                 name: this.state.categoryModel.name,\n//                 activity: this.state.categoryModel.activity,\n//                 date:this.state.categoryModel.date\n//             }\n//         }\n//         this.setState({\n//             ListData: list,\n//             isShow: false\n//         })\n//     }\n//     render() {\n//         return (\n//             <div>\n//                 <p>Data Category</p>\n//                 {this.state.isShow ?\n//                     <FormInput handlerCancel={this.handlerCancel} functionChange={this.functionChange}\n//                         functionSave={this.functionSave}\n//                         categoryModel={this.state.categoryModel} />\n//                     : null} <br />\n//                 <Button style={{margin:\"0 0 30px 0\"}} color=\"success\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#modal-default\" \n//                         onClick={this.handlerCreate}>Create New </Button>\n//                 <hr style={{margin:\"0 0 30px 0\"}}/>\n//                 <Table id=\"category\">\n//                     <tr>\n//                         <th>No</th>\n//                         <th>Name</th>\n//                         <th>Activity</th>\n//                         <th>Date</th>  \n//                         <th>Action</th>\n//                     </tr>\n//                     {\n//                         this.state.ListData.map(data => {\n//                             return (\n//                                 <tr>\n//                                     <td>{data.id}</td>\n//                                     <td>{data.name}</td>\n//                                     <td>{data.activity}</td>\n//                                     <td>{data.date}</td>\n//                                     <td><Button style={{margin:\"0 10px 0 0\"}} color=\"warning\" onClick={() => this.hendleEdit(data.id)}>Edit</Button> \n//                                     <Button color=\"danger\" onClick={() => this.hendleDelete(data)}>Delete</Button></td>\n//                                     </tr>\n//                             )\n//                         })\n//                     }\n//                 </Table>\n//             </div>\n//         )\n//     }\n// }\n// export default App;\nimport React from 'react';\nimport Service from './component/service';\nimport FormInput from './component/input/input';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.itemModel = {\n      id: 0,\n      initial: '',\n      name: '',\n      isActive: false\n    };\n\n    this.loadList = async () => {\n      const respon = await Service.getAll();\n\n      if (respon.success) {\n        this.setState({\n          ListData: respon.result\n        });\n      }\n    };\n\n    this.handlerCreate = () => {\n      this.setState({\n        mode: 'create',\n        categoryModel: this.itemModel\n      });\n    };\n\n    this.hendleEdit = async id => {\n      const respon = await Service.getById(id);\n\n      if (respon.success) {\n        this.setState({\n          mode: 'edit',\n          categoryModel: respon.result\n        });\n      }\n    };\n\n    this.handlerCancel = () => {\n      this.setState({\n        isShow: false\n      });\n    };\n\n    this.functionChange = name => ({\n      target: {\n        value\n      }\n    }) => {\n      this.setState({\n        categoryModel: { ...this.state.categoryModel,\n          [name]: value\n        }\n      });\n    };\n\n    this.functionChecked = name => ({\n      target: {\n        checked\n      }\n    }) => {\n      this.setState({\n        categoryModel: { ...this.state.categoryModel,\n          [name]: checked\n        }\n      });\n    };\n\n    this.hendleDelete = async data => {\n      if (window.confirm(`Apakah anda yakin untuk menghapus data ${data.name}`)) {\n        const respon = await Service.Delete(data);\n\n        if (respon.success) {\n          alert('Success : ' + respon.result);\n          this.loadList();\n        }\n      }\n    };\n\n    this.functionSave = async () => {\n      const {\n        categoryModel,\n        mode\n      } = this.state;\n\n      if (mode === 'create') {\n        if (this.functionValidasi()) {\n          const respon = await Service.Create(categoryModel);\n\n          if (respon.success) {\n            alert('Success : ' + respon.result);\n            this.loadList();\n          } else {\n            alert('Error :', respon.result);\n          }\n        }\n      }\n    };\n\n    this.state = {\n      ListData: [],\n      categoryModel: this.itemModel,\n      mode: '',\n      error: {}\n    };\n  }\n\n  componentDidMount() {\n    this.loadList();\n  }\n\n  functionValidasi() {\n    let field = this.state.categoryModel;\n    let error = {};\n    let formIsValild = true;\n\n    if (!field[\"initial\"]) {\n      formIsValild = false;\n      error[\"initial\"] = \"Initial Wajib diisi!\";\n    }\n\n    this.setState({\n      error: error\n    });\n    return formIsValild;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }\n    }, \"Category API\"), /*#__PURE__*/React.createElement(FormInput, {\n      handlerCancel: this.handlerCancel,\n      functionChange: this.functionChange,\n      functionChecked: this.functionChecked,\n      functionSave: this.functionSave,\n      categoryModel: this.state.categoryModel,\n      error: this.state.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#modal-default\",\n      onClick: this.handlerCreate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }\n    }, \"Create New\"), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-bordered table-hover table-striped dataTable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 29\n      }\n    }, \"Id\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 29\n      }\n    }, \"Initial\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 29\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 29\n      }\n    }, \"isActive\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 29\n      }\n    }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 21\n      }\n    }, this.state.ListData.map(data => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 41\n        }\n      }, data.id), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 41\n        }\n      }, data.initial), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 41\n        }\n      }, data.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 41\n        }\n      }, data.isActive.toString()), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.hendleEdit(data.id),\n        \"data-toggle\": \"modal\",\n        \"data-target\": \"#modal-default\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 45\n        }\n      }, \"Edit\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.hendleDelete(data),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 45\n        }\n      }, \"Delete\")));\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/nawan44/Documents/github/portofolio/CRUD/CRUD-frontend/src/App.jsx"],"names":["React","Service","FormInput","App","Component","constructor","itemModel","id","initial","name","isActive","loadList","respon","getAll","success","setState","ListData","result","handlerCreate","mode","categoryModel","hendleEdit","getById","handlerCancel","isShow","functionChange","target","value","state","functionChecked","checked","hendleDelete","data","window","confirm","Delete","alert","functionSave","functionValidasi","Create","error","componentDidMount","field","formIsValild","render","map","toString"],"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","sourcesContent":["// import React from 'react';\n// import './css/App.css'\n// import FormInput from './component/input/input';\n// import { Button,  Table } from 'reactstrap';\n\n// class App extends React.Component {\n//     constructor() {\n//         super();\n//         this.state = {\n//             ListData:\n//                 [\n\n//                 ],\n//             isShow: false,\n//             categoryModel: this.itemModel,\n//             mode: ''\n//         }\n//     }\n//     handlerCreate = () => {\n\n//         const idMax = this.state.ListData.length;\n\n//         this.setState({\n//             isShow: true,\n//             mode: 'create',\n//             categoryModel: {\n//                 ...this.state.categoryModel,\n//                 ['id']: idMax + 1\n//             }\n//         })\n//     }\n\n//     hendleEdit = (id) => {\n//         const selected = this.state.ListData.find(a => a.id === id);\n\n//         this.setState({\n//             isShow: true,\n//             mode: 'edit',\n//             categoryModel: selected\n//         })\n//     }\n\n//     handlerCancel = () => {\n\n//         this.setState({\n//             isShow: false\n//         })\n//     }\n\n//     hendleDelete = (data) => {\n//         const { ListData } = this.state;\n//         const IndexData = ListData.findIndex(dt => dt.id === data.id);\n//         if (window.confirm(`Apakah anda yakin untuk menghapus data ${data.activity}`)) {\n//             ListData.splice(IndexData, 1);\n//         }\n\n//         this.setState({\n//             ListData: ListData\n//         })\n\n//     }\n\n//     functionChange = activity => ({ target: { value } }) => {\n//         this.setState({\n//             categoryModel: {\n//                 ...this.state.categoryModel,\n//                 [activity]: value\n//             }\n//         })\n//     }\n\n\n//     functionSave = () => {\n//         const list = this.state.ListData;\n\n//         if (this.state.mode === 'create') {\n//             list.push(this.state.categoryModel);\n//         }\n//         else {\n//             const IndexData = list.findIndex(dt => dt.id === this.state.categoryModel.id);\n//             this.state.ListData[IndexData] = {\n//                 id: this.state.categoryModel.id,\n//                 name: this.state.categoryModel.name,\n//                 activity: this.state.categoryModel.activity,\n//                 date:this.state.categoryModel.date\n//             }\n//         }\n//         this.setState({\n//             ListData: list,\n//             isShow: false\n//         })\n\n//     }\n\n\n//     render() {\n//         return (\n//             <div>\n//                 <p>Data Category</p>\n\n//                 {this.state.isShow ?\n//                     <FormInput handlerCancel={this.handlerCancel} functionChange={this.functionChange}\n//                         functionSave={this.functionSave}\n//                         categoryModel={this.state.categoryModel} />\n//                     : null} <br />\n\n//                 <Button style={{margin:\"0 0 30px 0\"}} color=\"success\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#modal-default\" \n//                         onClick={this.handlerCreate}>Create New </Button>\n//                 <hr style={{margin:\"0 0 30px 0\"}}/>\n//                 <Table id=\"category\">\n//                     <tr>\n//                         <th>No</th>\n//                         <th>Name</th>\n//                         <th>Activity</th>\n//                         <th>Date</th>  \n//                         <th>Action</th>\n\n//                     </tr>\n//                     {\n//                         this.state.ListData.map(data => {\n//                             return (\n//                                 <tr>\n//                                     <td>{data.id}</td>\n//                                     <td>{data.name}</td>\n//                                     <td>{data.activity}</td>\n//                                     <td>{data.date}</td>\n//                                     <td><Button style={{margin:\"0 10px 0 0\"}} color=\"warning\" onClick={() => this.hendleEdit(data.id)}>Edit</Button> \n//                                     <Button color=\"danger\" onClick={() => this.hendleDelete(data)}>Delete</Button></td>\n//                                     </tr>\n//                             )\n//                         })\n//                     }\n//                 </Table>\n//             </div>\n//         )\n//     }\n// }\n\n// export default App;\n\nimport React from 'react';\nimport Service from './component/service';\nimport FormInput from './component/input/input';\n\n\n\nclass App extends React.Component {\n    itemModel = {\n        id: 0,\n        initial: '',\n        name: '',\n        isActive: false\n    }\n\n    constructor() {\n        super();\n        this.state = {\n            ListData: [],\n            categoryModel: this.itemModel,\n            mode: '',\n            error: {}\n        }\n    }\n\n    componentDidMount() {\n        this.loadList();\n    }\n\n    loadList = async () => {\n        const respon = await Service.getAll();\n        if (respon.success) {\n            this.setState({\n                ListData: respon.result\n            })\n        }\n    }\n\n    handlerCreate = () => {\n\n        this.setState({\n            mode: 'create',\n            categoryModel: this.itemModel\n        })\n    }\n\n    hendleEdit = async (id) => {\n        const respon = await Service.getById(id);\n\n        if (respon.success) {\n            this.setState({\n                mode: 'edit',\n                categoryModel: respon.result\n            })\n        }\n    }\n\n    handlerCancel = () => {\n\n        this.setState({\n            isShow: false\n        })\n    }\n\n    functionValidasi() {\n        let field = this.state.categoryModel;\n        let error = {};\n        let formIsValild = true;\n\n        if (!field[\"initial\"]) {\n            formIsValild = false;\n            error[\"initial\"] = \"Initial Wajib diisi!\"\n        }\n        this.setState({\n            error: error\n        })\n        return formIsValild;\n    }\n\n    functionChange = name => ({ target: { value } }) => {\n        this.setState({\n            categoryModel: {\n                ...this.state.categoryModel,\n                [name]: value\n            }\n        })\n    }\n\n    functionChecked = name => ({ target: { checked } }) => {\n        this.setState({\n            categoryModel: {\n                ...this.state.categoryModel,\n                [name]: checked\n            }\n        })\n    }\n    hendleDelete = async (data) => {\n\n        if (window.confirm(`Apakah anda yakin untuk menghapus data ${data.name}`)) {\n            const respon = await Service.Delete(data)\n            if (respon.success) {\n                alert('Success : ' + respon.result);\n                this.loadList();\n            }\n        }\n\n    }\n\n    functionSave = async () => {\n        const { categoryModel, mode } = this.state;\n\n        if (mode === 'create') {\n            if (this.functionValidasi()) {\n                const respon = await Service.Create(categoryModel);\n                if (respon.success) {\n                    alert('Success : ' + respon.result);\n                    this.loadList();\n                }\n                else {\n                    alert('Error :', respon.result);\n                }\n            }\n        }\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                <h3>Category API</h3>\n\n                <FormInput handlerCancel={this.handlerCancel} functionChange={this.functionChange}\n                    functionChecked={this.functionChecked} functionSave={this.functionSave}\n                    categoryModel={this.state.categoryModel} error={this.state.error} />\n\n                <button className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#modal-default\"\n                    onClick={this.handlerCreate}>Create New</button>\n\n                <table className=\"table table-bordered table-hover table-striped dataTable\">\n                    <thead>\n                        <tr>\n                            <th>Id</th>\n                            <th>Initial</th>\n                            <th>Name</th>\n                            <th>isActive</th>\n                            <th>Action</th>\n\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            this.state.ListData.map(data => {\n                                return (\n                                    <tr>\n                                        <td>{data.id}</td>\n                                        <td>{data.initial}</td>\n                                        <td>{data.name}</td>\n                                        <td>{data.isActive.toString()}</td>\n                                        <td><button onClick={() => this.hendleEdit(data.id)} data-toggle=\"modal\" data-target=\"#modal-default\">Edit</button>\n                                            <button onClick={() => this.hendleDelete(data)}>Delete</button></td>\n                                    </tr>\n                                )\n                            })\n                        }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}